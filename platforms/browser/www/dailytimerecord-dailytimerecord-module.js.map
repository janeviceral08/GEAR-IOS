{"version":3,"sources":["webpack:///./src/app/pages/dailytimerecord/dailytimerecord.module.ts","webpack:///./src/app/pages/dailytimerecord/dailytimerecord.page.html","webpack:///./src/app/pages/dailytimerecord/dailytimerecord.page.scss","webpack:///./src/app/pages/dailytimerecord/dailytimerecord.page.ts"],"names":[],"mappings":"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","file":"dailytimerecord-dailytimerecord-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DailytimerecordPage } from './dailytimerecord.page';\nimport {FilterMenuComponentModule} from '../../component/filter-menu/filter-menu.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DailytimerecordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    FilterMenuComponentModule\n  ],\n  declarations: [DailytimerecordPage]\n})\nexport class DailytimerecordPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button class=btnMenu ion-button icon-only menuToggle slot=\\\"start\\\" (click)=\\\"toggleMenu()\\\">\\n        <ion-icon color=\\\"light\\\" name=\\\"menu\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button class=btnFilter slot=\\\"end\\\" color=\\\"light\\\" (click)=\\\"openModal()\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"search\\\" mode=\\\"md\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-title mode=\\\"md\\\" slot=\\\"start\\\">Daily Time Record</ion-title>\\n</ion-header>\\n<ion-content padding class=\\\"classContent\\\" hide-header header=\\\"header\\\">\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Pull to refresh\\\" refreshingSpinner=\\\"circles\\\"\\n      refreshingText=\\\"Refreshing...\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <ion-card class=divCardSegment mode=\\\"md\\\">\\n    <div *ngIf=\\\"loadingDone; else shimmer\\\">\\n      <div *ngIf=\\\"noError; else error\\\">\\n        <ion-segment class=\\\"sgmtDTRType\\\" mode=\\\"md\\\" scrollable [(ngModel)]=\\\"DTRType\\\">\\n          <div *ngFor=\\\"let type of DTRTypeList\\\">\\n            <div *ngIf=\\\"type == 'DTR'; else otherType\\\">\\n              <ion-segment-button mode=\\\"md\\\" value={{type}} checked>\\n                {{type}}\\n              </ion-segment-button>\\n            </div>\\n            <ng-template #otherType>\\n              <ion-segment-button mode=\\\"md\\\" value={{type}}>\\n                {{type}}\\n              </ion-segment-button>\\n            </ng-template>\\n          </div>\\n        </ion-segment>\\n        <div [ngSwitch]=\\\"DTRType\\\">\\n          <div *ngFor=\\\"let type of DTRTypeList\\\">\\n            <ion-list mode=\\\"md\\\" *ngSwitchCase=\\\"type\\\">\\n              <div *ngIf=\\\"type == 'DTR'\\\">\\n                <div *ngIf=\\\"!dtrIsEmpty; else error\\\">\\n                  <div *ngFor=\\\"let dtr of DTRList\\\">\\n                    <ion-item class=\\\"itmClass\\\" button lines=\\\"full\\\" detail=\\\"false\\\" (click)=\\\"setDTRDetails(dtr)\\\">\\n                      <ion-avatar class=\\\"divDate\\\">\\n                        <div class=\\\"DateMonth\\\">\\n                          {{getDateMonth(dtr.DTR_date,1)}}\\n                        </div>\\n                        <div class=\\\"DateDate\\\">\\n                          {{getDateDate(dtr.DTR_date)}}\\n                        </div>\\n                      </ion-avatar>\\n                      <ion-label class=\\\"lblDTR\\\" text-wrap>\\n                        <div class=\\\"divDTRDesc\\\">\\n                          <span *ngIf=\\\"dtr.Leave_rem != ''\\\" class=\\\"divLeave\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'BL'\\\" src=\\\"assets/icon/ic_bl.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'EL'\\\" src=\\\"assets/icon/ic_el.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'IL'\\\" src=\\\"assets/icon/ic_il.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'MCW'\\\" src=\\\"assets/icon/ic_mcw.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'ML'\\\" src=\\\"assets/icon/ic_ml.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'PL'\\\" src=\\\"assets/icon/ic_pl.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'SL'\\\" src=\\\"assets/icon/ic_sl.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'VL'\\\" src=\\\"assets/icon/ic_vl.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.Leave_rem == 'XS'\\\" src=\\\"assets/icon/ic_xs.png\\\" alt=\\\"\\\" class=\\\"imgLeaveIcon\\\">\\n                            <!-- {{dtr.Leave_rem}} -->\\n                          </span>\\n                          <span *ngIf=\\\"dtr.AttAdv_rem != ''\\\" class=\\\"divLeave\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'AUTHORIZED UNDER TIME '\\\" src=\\\"assets/icon/ic_au.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'AUTHORIZED LATE '\\\" src=\\\"assets/icon/ic_el.al\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'OFFSET '\\\" src=\\\"assets/icon/ic_os.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'CTO '\\\" src=\\\"assets/icon/ic_cto.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'OFFICIAL BUSINESS '\\\" src=\\\"assets/icon/ic_ob.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <img *ngIf=\\\"dtr.AttAdv_rem == 'AUTHORIZED SHIFT '\\\" src=\\\"assets/icon/ic_as.png\\\" alt=\\\"\\\"\\n                              class=\\\"imgLeaveIcon\\\">\\n                            <!-- {{dtr.AttAdv_rem}} -->\\n                          </span>\\n                          <div class=\\\"divDTRTime\\\">\\n                            <span *ngIf=\\\"dtr.Am_In != ''\\\">{{dtr.Am_In}}</span>\\n                            <span *ngIf=\\\"dtr.Am_In == ''\\\">-</span>\\n                            <span *ngIf=\\\"dtr.Am_Out != ''\\\"> - {{dtr.Am_Out}}</span>\\n                          </div>\\n                          <div class=\\\"divDTRDay\\\">\\n                            <span>{{dtr.Att_Code}}</span>\\n                          </div>\\n                          <div class=\\\"divDTRHours\\\">\\n                            <span>Shift: {{dtr.ShiftSchedule}}</span>\\n                          </div>\\n                        </div>\\n                      </ion-label>\\n                    </ion-item>\\n                  </div>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"type == 'OFFICIAL BUSINESS'\\\">\\n                <div *ngIf=\\\"!obIsEmpty; else error\\\">\\n                  <div *ngFor=\\\"let ob of OBList\\\">\\n                    <ion-item class=\\\"itmClass\\\" button lines=\\\"full\\\" detail=\\\"false\\\">\\n                      <ion-avatar class=\\\"divDate\\\">\\n                        <div class=\\\"DateMonth\\\">\\n                          {{getDateMonth(ob.Log_Date,1)}}\\n                        </div>\\n                        <div class=\\\"DateDate\\\">\\n                          {{getDateDate(ob.Log_Date)}}\\n                        </div>\\n                      </ion-avatar>\\n                      <ion-label text-wrap>\\n                        <div class=\\\"divDTRDesc\\\">\\n                          <div class=\\\"divOBTime\\\">\\n                            <span *ngIf=\\\"ob.Log_Time != ''\\\">{{ob.Log_Time}}</span>\\n                            <span *ngIf=\\\"ob.Log_Time == ''\\\">-</span>\\n                            <span *ngIf=\\\"ob.Log_Time_In != ''\\\"> - {{ob.Log_Time_In}}</span>\\n                          </div>\\n                          <div class=\\\"divOBRemarks\\\">\\n                            <span *ngIf=\\\"ob.Remarks != ''\\\">{{ob.Log_Remark}}</span>\\n                          </div>\\n                        </div>\\n                      </ion-label>\\n                    </ion-item>\\n                  </div>\\n                </div>\\n              </div>\\n            </ion-list>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ion-card>\\n</ion-content>\\n<ng-template #shimmer>\\n  <ion-progress-bar type=\\\"indeterminate\\\"></ion-progress-bar>\\n  <div id=\\\"lines7\\\" class=\\\"shine\\\"></div>\\n  <ion-item class=\\\"shimmeritem\\\" *ngFor=\\\"let number of [0,1,2]\\\">\\n    <ion-avatar class=\\\"divDate\\\">\\n      <div class=\\\"DateMonth\\\"></div>\\n      <div class=\\\"DateDate\\\"></div>\\n    </ion-avatar>\\n    <ion-label>\\n      <div id=\\\"lines4\\\" class=\\\"shine\\\"></div><br>\\n      <div id=\\\"lines3\\\" class=\\\"shine\\\"></div><br>\\n      <div id=\\\"lines3\\\" class=\\\"shine\\\"></div>\\n    </ion-label>\\n  </ion-item>\\n</ng-template>\\n<ng-template #error>\\n  <ion-item lines=\\\"none\\\">\\n    <div class=\\\"errorbox\\\">\\n      <ion-avatar class=\\\"center\\\">\\n        <img src=\\\"assets/img/logo_gabc_gray.png\\\"></ion-avatar>\\n      <span class=\\\"errorMessage\\\">{{errorMessage}}</span>\\n      <span class=\\\"errorMessage\\\">\\n        <ion-button class=\\\"errorButton\\\" (click)=\\\"refresh()\\\">RETRY</ion-button>\\n        <ion-button class=\\\"errorButton\\\" style=\\\"margin-left:10px\\\" [routerLink]=\\\" ['/main/home']\\\">\\n          <ion-icon color=\\\"light\\\" name=\\\"home\\\"></ion-icon>\\n        </ion-button>\\n      </span>\\n    </div>\\n  </ion-item>\\n</ng-template>\"","module.exports = \"ion-header {\\n  background-image: url('banner_dark_green.png') !important;\\n  background-size: cover;\\n  background-position: bottom;\\n  padding: 10px 0px; }\\n\\nion-toolbar {\\n  --background: transparent;\\n  --padding-start: 0px; }\\n\\nion-title {\\n  color: white;\\n  margin-left: 10px;\\n  font-size: 30px;\\n  text-shadow: 1px 1px 1px #0000005c; }\\n\\nion-icon {\\n  font-size: 24px !important; }\\n\\nion-list {\\n  padding-bottom: 0px; }\\n\\nion-item:last-child {\\n  --border-width: 0px 0px 1px 0 !important; }\\n\\nion-card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }\\n\\n.btnMenu {\\n  padding: 0 0 0 5px; }\\n\\n.classContent {\\n  --background: #F5F5F5;\\n  --padding-top: 10px !important; }\\n\\n.divCardSegment {\\n  margin-left: -5px;\\n  margin-right: -5px;\\n  margin-top: 0px; }\\n\\n.sgmtDTRType {\\n  min-width: 70px;\\n  background: white;\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  border-bottom-color: #cecccc;\\n  font-family: \\\"RobotoRegular\\\"; }\\n\\n.divDate {\\n  margin-top: -30px; }\\n\\n.divDTRDesc {\\n  margin-left: 40px;\\n  padding-bottom: 5px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  min-height: 70px; }\\n\\n.divDTRStat {\\n  display: flex;\\n  justify-content: space-between;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  margin-bottom: -8px; }\\n\\n.DateMonth {\\n  font-size: 13px;\\n  padding-top: 3px;\\n  color: white;\\n  vertical-align: middle;\\n  text-align: center;\\n  border-top-left-radius: 15px;\\n  border-top-right-radius: 15px;\\n  background: #E8554D;\\n  width: 65px;\\n  height: 20px; }\\n\\n.DateDate {\\n  font-size: 35px;\\n  color: #5C5C5C;\\n  vertical-align: middle;\\n  text-align: center;\\n  border-bottom-left-radius: 15px;\\n  border-bottom-right-radius: 15px;\\n  background: #F3F3F3;\\n  width: 65px;\\n  height: 45px; }\\n\\n.divDTRTime {\\n  font-size: 14px;\\n  font-family: \\\"RobotoRegular\\\"; }\\n\\n.divDTRDay {\\n  color: #808080;\\n  font-size: 11px;\\n  margin-bottom: 12px; }\\n\\n.divDTRHours {\\n  color: #808080;\\n  font-size: 11px; }\\n\\n.lblDTR {\\n  margin-right: 5px; }\\n\\n.divLeave {\\n  font-size: 11px;\\n  float: right;\\n  text-align: center; }\\n\\n.imgLeaveIcon {\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 15px; }\\n\\n.divOBTime {\\n  font-size: 14px;\\n  margin-bottom: 5px; }\\n\\n.divOBRemarks {\\n  color: #808080;\\n  font-size: 11px;\\n  white-space: normal; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMtZ2FiYy9Eb2N1bWVudHMvR0VBUi9HRUFSX2lPUy9zcmMvYXBwL3BhZ2VzL2RhaWx5dGltZXJlY29yZC9kYWlseXRpbWVyZWNvcmQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseURBQTZFO0VBQzdFLHNCQUFzQjtFQUN0QiwyQkFBMkI7RUFDM0IsaUJBQWlCLEVBQUE7O0FBSXJCO0VBQ0kseUJBQWE7RUFDYixvQkFBZ0IsRUFBQTs7QUFJcEI7RUFDSSxZQUFZO0VBQ1osaUJBQWlCO0VBRWpCLGVBQWU7RUFDZixrQ0FBa0MsRUFBQTs7QUFHdEM7RUFDSSwwQkFBMEIsRUFBQTs7QUFHOUI7RUFDSSxtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSx3Q0FBZSxFQUFBOztBQUduQjtFQUNJLDRFQUE0RSxFQUFBOztBQUdoRjtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLHFCQUFhO0VBQ2IsOEJBQWMsRUFBQTs7QUFHbEI7RUFDSSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLDBCQUEwQjtFQUMxQix3QkFBd0I7RUFDeEIsNEJBQTRCO0VBQzVCLDRCQUE0QixFQUFBOztBQUdoQztFQUNJLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUNKLEVBQUE7O0FBRUE7RUFDSSxlQUFlO0VBQ2YsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsK0JBQStCO0VBQy9CLGdDQUFnQztFQUNoQyxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxlQUFlO0VBQ2YsNEJBQTRCLEVBQUE7O0FBR2hDO0VBQ0ksY0FBYztFQUNkLGVBQWU7RUFDZixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxjQUFjO0VBQ2QsZUFBZSxFQUFBOztBQUduQjtFQUNJLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGVBQWU7RUFDZixZQUFZO0VBQ1osa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksWUFBWTtFQUNaLFdBQVc7RUFDWCxtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksY0FBYztFQUNkLGVBQWU7RUFDZixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RhaWx5dGltZXJlY29yZC9kYWlseXRpbWVyZWNvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi8uLi9hc3NldHMvaW1nL2Jhbm5lcl9kYXJrX2dyZWVuLnBuZycpICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XG4gICAgcGFkZGluZzogMTBweCAwcHg7XG4gICAgLy8gaGVpZ2h0OiAxMDBweDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwcHg7XG4gICAgLy8gbWFyZ2luLXRvcDogMjBweDtcbn1cblxuaW9uLXRpdGxlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgLy9tYXJnaW4tdG9wOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggIzAwMDAwMDVjO1xufVxuXG5pb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAyNHB4ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1saXN0IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xufVxuXG5pb24taXRlbTpsYXN0LWNoaWxkIHtcbiAgICAtLWJvcmRlci13aWR0aDogMHB4IDBweCAxcHggMCAhaW1wb3J0YW50O1xufVxuXG5pb24tY2FyZCB7XG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcbn1cblxuLmJ0bk1lbnUge1xuICAgIHBhZGRpbmc6IDAgMCAwIDVweDtcbn1cblxuLmNsYXNzQ29udGVudCB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjRjVGNUY1O1xuICAgIC0tcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLmRpdkNhcmRTZWdtZW50IHtcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IC01cHg7XG4gICAgbWFyZ2luLXRvcDogMHB4O1xufVxuXG4uc2dtdERUUlR5cGUge1xuICAgIG1pbi13aWR0aDogNzBweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2NlY2NjYztcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9SZWd1bGFyXCI7XG59XG5cbi5kaXZEYXRlIHtcbiAgICBtYXJnaW4tdG9wOiAtMzBweDtcbn1cblxuLmRpdkRUUkRlc2Mge1xuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG1pbi1oZWlnaHQ6IDcwcHg7XG59XG5cbi5kaXZEVFJTdGF0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgbWFyZ2luLWJvdHRvbTogLThweDtcbn1cblxuLkRhdGVNb250aCB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIHBhZGRpbmctdG9wOiAzcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE1cHg7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE1cHg7XG4gICAgYmFja2dyb3VuZDogI0U4NTU0RDtcbiAgICB3aWR0aDogNjVweDtcbiAgICBoZWlnaHQ6IDIwcHhcbn1cblxuLkRhdGVEYXRlIHtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgY29sb3I6ICM1QzVDNUM7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTVweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDtcbiAgICBiYWNrZ3JvdW5kOiAjRjNGM0YzO1xuICAgIHdpZHRoOiA2NXB4O1xuICAgIGhlaWdodDogNDVweDtcbn1cblxuLmRpdkRUUlRpbWUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9SZWd1bGFyXCI7XG59XG5cbi5kaXZEVFJEYXkge1xuICAgIGNvbG9yOiAjODA4MDgwO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xufVxuXG4uZGl2RFRSSG91cnMge1xuICAgIGNvbG9yOiAjODA4MDgwO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbn1cblxuLmxibERUUiB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5kaXZMZWF2ZSB7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbWdMZWF2ZUljb24ge1xuICAgIGhlaWdodDogMzBweDtcbiAgICB3aWR0aDogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4uZGl2T0JUaW1lIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4uZGl2T0JSZW1hcmtzIHtcbiAgICBjb2xvcjogIzgwODA4MDtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { OverlayEventDetail } from '@ionic/core';\nimport * as Constants from 'src/app/utils/constants.service';\nimport { ModalController, MenuController, LoadingController, Platform, AlertController, NavController } from '@ionic/angular';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { LoginService } from 'src/app/services/login.service';\nimport { FilterMenuComponent } from '../../component/filter-menu/filter-menu.component';\n\n@Component({\n  selector: 'app-dailytimerecord',\n  templateUrl: './dailytimerecord.page.html',\n  styleUrls: ['./dailytimerecord.page.scss'],\n})\nexport class DailytimerecordPage implements OnInit {\n  DTRType: string = \"DTR\";\n  DTRTypeList: string[] = [\"DTR\", \"OFFICIAL BUSINESS\"];\n  DTRList: any[] = [];\n  OBList: any[] = [];\n  loadingDone: boolean = false;\n  noError: boolean = true;\n  empId;\n  event;\n  dtrIsEmpty: boolean;\n  obIsEmpty: boolean;\n  errorMessage: string;\n  tempResult: any;\n  results: any;\n  modalIsOpen: boolean;\n  dtrModal: string[] = [];\n  dtrDateFrom: any;\n  dtrDateTo: any;\n  obDateFrom: any;\n  obDateTo: any;\n  empSection: any;\n\n  constructor(\n    private storage: Storage,\n    private router: Router,\n    private menuCtrl: MenuController,\n    private httpApi: HTTP,\n    private loginService: LoginService,\n    private modalController: ModalController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.loadingDone = false;\n    this.storage.get(`${Constants.KEY_EMPID}`).then((val) => {\n      this.empId = val;\n      this.getDTR();\n    });\n  }\n\n  getDTR() {\n    this.storage.get(`${Constants.KEY_SESSION}`).then((val) => {\n\n      let request = {\n        SessionID: val[Constants.KEY_RECORD_ID],\n        SecurityStamp: val[Constants.KEY_SECURITY_STAMP],\n        Token: val[Constants.KEY_TOKEN],\n        AppPlatForm: Constants.APP_PLATFORM,\n        AppVersion: Constants.VERSION,\n        UserID: this.empId,\n        EmployeeId: this.empId,\n        Remarks: \"\",\n        DateFrom_DTR: this.dtrDateFrom,\n        DateTo_DTR: this.dtrDateTo,\n        DateFrom_OB: this.obDateFrom,\n        DateTo_OB: this.obDateTo\n      }\n\n\n      this.storage.get(Constants.KEY_SERVER_SETTINGS).then((value) => {\n\n        var uri: string = `${value[Constants.SERVER_URL]}/api/DTROB/GetDTROB`;\n        var url: string = encodeURI(uri);\n\n        this.httpApi.post(url, request, {})\n          .then(data => {\n\n            if (this.event) {\n              this.event.target.complete();\n            }\n\n            if (data.data == null || data.data == undefined) {\n              this.noError = false;\n              this.errorMessage = Constants.MESSAGE_CON_ERROR;\n              return;\n            }\n\n            var jsonData = JSON.parse(data.data);\n\n            if (jsonData['Status'] != Constants.POST_SUCCESS) {\n              this.noError = false;\n              this.errorMessage = Constants.MESSAGE_CON_ERROR;\n              this.loadingDone = true;\n              return;\n            }\n\n            if (jsonData['Success'] != Constants.POST_YES) {\n\n              switch (jsonData['Message']) {\n                case Constants.OUTDATED_ERROR:\n                  this.loginService.showSessionError(Constants.ERROR_OUTDATED_HEADER, Constants.OUTDATED_MESSAGE);\n                  return;\n                case Constants.ERROR_OTHER_DEVICE:\n                  this.loginService.showSessionError(Constants.ERROR_OTHER_DEVICE_HEADER, Constants.ERROR_MESSAGE_OTHER_DEVICE);\n                  return;\n                case Constants.ERROR_EXPIRED:\n                  this.loginService.showSessionError(Constants.ERROR_EXPIRED_HEADER, Constants.ERROR_MESSAGE_EXPIRED);\n                  return;\n                case Constants.ERROR_REQUIRED:\n                  this.loginService.showSessionError(Constants.ERROR_REQUIRED_HEADER, Constants.ERROR_MESSAGE_REQUIRED);\n                  return;\n              }\n\n              this.noError = false;\n              this.errorMessage = Constants.MESSAGE_CON_ERROR;\n              this.loadingDone = true;\n              return;\n            }\n\n            this.tempResult = jsonData['Value'][\"tblDTR\"];\n            if (this.tempResult.length == 0) {\n              this.dtrIsEmpty = true;\n              this.errorMessage = \"EMPTY\";\n            }\n            this.tempResult = jsonData['Value'][\"tblOB\"];\n            if (this.tempResult.length == 0) {\n              this.obIsEmpty = true;\n              this.errorMessage = \"EMPTY\";\n            }\n\n            this.noError = true;\n            this.DTRList = jsonData['Value'][\"tblDTR\"];\n            this.OBList = jsonData['Value'][\"tblOB\"];\n            this.loadingDone = true;\n            console.log(this.DTRList);\n          })\n\n          .catch(error => {\n            console.log(error);\n\n            if (this.event) {\n              this.event.target.complete();\n            }\n\n            this.noError = false;\n            this.errorMessage = Constants.MESSAGE_CON_ERROR;\n            this.loadingDone = true;\n          });\n      });\n    });\n  }\n\n  setDTRDetails(item: any) {\n    this.storage.set(Constants.KEY_DTRDETAILS, item);\n\n    this.router.navigate(['/dailytimerecorddetails', 'dailytimerecord'])\n  }\n\n  getDateMonth(datename: string, procedure: number): string {\n    var date = new Date(datename);\n    var CurrentMonth: string[] = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",];\n    if (procedure == 1)\n      return CurrentMonth[date.getMonth()].toString().toUpperCase();\n    else\n      return CurrentMonth[date.getMonth()];\n  }\n\n  getDateDate(datename: string): string {\n    var date = new Date(datename);\n    return date.getDate().toString();\n  }\n\n  toggleMenu() {\n    this.menuCtrl.toggle();\n  }\n\n  openModal() {\n    if (!this.modalIsOpen)\n      this.showModal();\n  }\n\n  async showModal() {\n    this.modalIsOpen = true;\n    this.dtrModal[\"LeaveFrom\"] = this.dtrDateFrom;\n    this.dtrModal[\"LeaveTo\"] = this.dtrDateTo;\n    this.dtrModal[\"DateFrom\"] = this.obDateFrom;\n    this.dtrModal[\"DateTo\"] = this.obDateTo;\n    const modal: HTMLIonModalElement =\n      await this.modalController.create({\n        component: FilterMenuComponent,\n        cssClass: 'modalFilterMenu',\n        animated: false,\n        backdropDismiss: false,\n        componentProps: {\n          module: \"DailyTimeRecord\",\n          data: this.dtrModal\n        }\n\n      });\n\n    modal.onDidDismiss().then((detail: OverlayEventDetail) => {\n      if (detail !== null) {\n        if (detail.data['isDismissed'] == 0) {\n\n          this.dtrDateFrom = detail.data['leaveFrom'];\n          this.dtrDateTo = detail.data['leaveTo'];\n          this.obDateFrom = detail.data['dateFiledFrom'];\n          this.obDateTo = detail.data['dateFiledTo'];\n          console.log(this.dtrDateFrom, this.dtrDateTo, this.obDateFrom, this.obDateTo);\n          this.loadingDone = false;\n          this.noError = true;\n          this.dtrIsEmpty = false;\n          this.obIsEmpty = false;\n\n          this.getDTR();\n        }\n      }\n      this.modalIsOpen = false;\n    });\n\n    await modal.present();\n  }\n\n  refresh(event) {\n    this.event = event;\n    this.ionViewWillEnter();\n  }\n\n}\n"],"sourceRoot":""}